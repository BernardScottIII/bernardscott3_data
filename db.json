{
    "projects": [
        {
            "id": "portfolio-website",
            "title": "Portfolio Website",
            "summary": "Personal website project which uses Sveltekit, Prism, and PostgreSQL",
            "description": "The third iteration of my personal portfolio website which uses Svelte as the frontend, APIs developed using SvelteKit, and a backend which uses Prism and, consequentially, PostgreSQL."
        },
        {
            "id": "batch-job-dispatcher",
            "title": "Batch Job Dispatcher",
            "summary": "A job scheduling program written in C which uses multi-threading",
            "description": "A job scheduling program written in C which mimicks the dispatcher contained in a POSIX operating system. It has two main threads, a scheduler which accepts new jobs, removing jobs upon dispatch, and printing the job queue. A second dispatcher thread is responsible for monitoring the job queue and executing jobs at their specified time (seconds). A third thread, the executer thread, forks the dispatched job and executes it."
        },
        {
            "id": "sports-analytics-and-communications-website",
            "title": "Sports Analytics and Communications Website",
            "summary": "A landing page for the University of Scranton Sports Analytics and Communications Club",
            "description": "A web page designed to engage club members by providing information about club leaders, club events, club newsletters, and even hosing analytical activities for the members to complete in order to grow their analytics knowledge and skills."
        },
        {
            "id": "acm-student-chapter-website",
            "title": "ACM Student Chapter Website",
            "summary": "University of Scranton Association of Computing Machinery Student Chapter Website",
            "description": "A static web page hosted on University of Scranton servers which gives students information about the chapter's officers and upcomming events."
        },
        {
            "id": "dsa-mastery",
            "title": "My Journey to DSA Mastery",
            "summary": "My real summer 2023 project where I do my best to learn DSA concepts crucial for technical internships",
            "description": "The real motivation for creating this website was to have a place where I could learn about different data structures and different algorithms, find a valid use case for what I have just learned, and build it on this website in a way which demonstrates my understanding and engages visitors."
        }
    ],
    "data-structures": [
        {
            "id": "big-o-notation",
            "title": "Big-O Notation",
            "summary": "The only way to appreciate the optimizations provided by data structures is learning how each structure is evaluated."
        },
        {
            "id": "arrays",
            "title": "Arrays",
            "summary": "Everyone needs to start somewhere, so I'll start with a near-universal \"data structure\"."
        },
        {
            "id": "linked-lists",
            "title": "Linked Lists",
            "summary": "Similar to an array, but with some lower-level advantages and some higher-level restrictions."
        },
        {
            "id": "queues-and-stacks",
            "title": "Queues and Stacks",
            "summary": "Expands upon established linked list and array implementations by changing how items are added and removed."
        },
        {
            "id": "trees",
            "title": "Trees",
            "summary": "Just like in nature, there are many different trees with many different branches."
        },
        {
            "id": "heaps",
            "title": "Heaps",
            "summary": ""
        },
        {
            "id": "graphs",
            "title": "Graphs",
            "summary": "Uprooting the entire concept of trees and their roots."
        },
        {
            "id": "hash-tables",
            "title": "Hash Tables",
            "summary": ""
        }
    ],
    "algorithms": [
        {
            "id": "iterative-search",
            "title": "Iterative Search",
            "summary": "Most programmers implementing any iterative loops are simply implementing a straightforward way of searching for values!"
        },
        {
            "id": "breadth-first-search",
            "title": "Breadth First Search",
            "summary": "Level order search"
        },
        {
            "id": "depth-first-search",
            "title": "Depth First Search",
            "summary": "Covers pre-,in-, and post-order traversal of trees"
        },
        {
            "id": "insertion-sort",
            "title": "Insertion Sort",
            "summary": ""
        },
        {
            "id": "selection-sort",
            "title": "Selection Sort",
            "summary": ""
        },
        {
            "id": "bubble-sort",
            "title": "Bubble Sort",
            "summary": "Blub blub blub."
        },
        {
            "id": "merge-sort",
            "title": "Merge Sort",
            "summary": ""
        },
        {
            "id": "quick-sort",
            "title": "Quick Sort",
            "summary": ""
        },
        {
            "id": "dijkstras-algorithm",
            "title": "Dijkstra's Algorithm",
            "summary": ""
        },
        {
            "id": "heap-sort",
            "title": "Heap Sort",
            "summary": ""
        },
        {
            "id": "a*-search",
            "title": "A* Search",
            "summary": ""
        }
    ]
}